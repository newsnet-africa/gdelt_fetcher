// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GlobalKnowledgeGraph {
    /// The record ID.
    #[prost(string, optional, tag = "1")]
    pub record_id: ::core::option::Option<::prost::alloc::string::String>,
    /// The GDELT date.
    #[prost(message, optional, tag = "2")]
    pub v2_1_date: ::core::option::Option<super::gdelt_date::GdeltDate>,
    /// The source collection identifier.
    #[prost(
        enumeration = "super::gdelt_source_collection_identifier::SourceCollectionIdentifier",
        optional,
        tag = "3"
    )]
    pub source_collection_identifier: ::core::option::Option<i32>,
    /// The source common name.
    #[prost(string, optional, tag = "4")]
    pub source_common_name: ::core::option::Option<::prost::alloc::string::String>,
    /// The document identifier.
    #[prost(string, optional, tag = "5")]
    pub document_identifier: ::core::option::Option<::prost::alloc::string::String>,
    /// The counts.
    #[prost(message, repeated, tag = "6")]
    pub counts_v1: ::prost::alloc::vec::Vec<super::gdelt_count::GdeltCount>,
    #[prost(message, repeated, tag = "7")]
    pub counts_v2: ::prost::alloc::vec::Vec<super::gdelt_count::GdeltCount>,
    /// The themes.
    #[prost(
        enumeration = "super::gdelt_categorylist::GdeltCategoryList",
        repeated,
        tag = "8"
    )]
    pub themes_v1: ::prost::alloc::vec::Vec<i32>,
    #[prost(message, repeated, tag = "9")]
    pub themes_v2: ::prost::alloc::vec::Vec<global_knowledge_graph::ThemeWithOffset>,
    /// The locations.
    #[prost(message, repeated, tag = "10")]
    pub locations_v1: ::prost::alloc::vec::Vec<super::gdelt_location::GdeltLocation>,
    #[prost(message, repeated, tag = "11")]
    pub locations_v2: ::prost::alloc::vec::Vec<super::gdelt_location::GdeltLocation>,
    /// The persons.
    #[prost(string, repeated, tag = "12")]
    pub persons_v1: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(message, repeated, tag = "13")]
    pub persons_v2: ::prost::alloc::vec::Vec<global_knowledge_graph::PersonWithOffset>,
    /// The organisations.
    #[prost(string, repeated, tag = "14")]
    pub organisations_v1: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(message, repeated, tag = "15")]
    pub organisations_v2: ::prost::alloc::vec::Vec<
        global_knowledge_graph::OrganisationWithOffset,
    >,
    /// The tone.
    #[prost(message, optional, tag = "16")]
    pub tone: ::core::option::Option<super::gdelt_tone::GdeltTone>,
    /// The enhanced dates.
    #[prost(message, repeated, tag = "17")]
    pub enhanced_dates: ::prost::alloc::vec::Vec<super::gdelt_date::GdeltDate>,
    /// The sharing image.
    #[prost(string, optional, tag = "18")]
    pub sharing_image: ::core::option::Option<::prost::alloc::string::String>,
    /// The related images.
    #[prost(string, repeated, tag = "19")]
    pub related_images: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    /// The social image embeds.
    #[prost(string, repeated, tag = "20")]
    pub social_image_embeds: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    /// The social video embeds.
    #[prost(string, repeated, tag = "21")]
    pub social_video_embeds: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    /// The quotations.
    #[prost(message, repeated, tag = "22")]
    pub quotations: ::prost::alloc::vec::Vec<super::gdelt_quotation::GdeltQuotation>,
    /// The all names.
    #[prost(message, repeated, tag = "23")]
    pub all_names: ::prost::alloc::vec::Vec<global_knowledge_graph::NameWithOffset>,
    /// The amounts.
    #[prost(message, repeated, tag = "24")]
    pub amounts: ::prost::alloc::vec::Vec<global_knowledge_graph::Amount>,
    /// The translation info.
    #[prost(message, optional, tag = "25")]
    pub translation_info: ::core::option::Option<
        global_knowledge_graph::TranslationInfo,
    >,
}
/// Nested message and enum types in `GlobalKnowledgeGraph`.
pub mod global_knowledge_graph {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, Copy, PartialEq, ::prost::Message)]
    pub struct ThemeWithOffset {
        #[prost(
            enumeration = "super::super::gdelt_categorylist::GdeltCategoryList",
            tag = "1"
        )]
        pub theme: i32,
        #[prost(uint64, optional, tag = "2")]
        pub offset: ::core::option::Option<u64>,
    }
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct PersonWithOffset {
        #[prost(string, tag = "1")]
        pub person: ::prost::alloc::string::String,
        #[prost(uint64, tag = "2")]
        pub offset: u64,
    }
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct OrganisationWithOffset {
        #[prost(string, tag = "1")]
        pub organisation: ::prost::alloc::string::String,
        #[prost(uint64, tag = "2")]
        pub offset: u64,
    }
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct NameWithOffset {
        #[prost(string, tag = "1")]
        pub name: ::prost::alloc::string::String,
        #[prost(uint64, tag = "2")]
        pub offset: u64,
    }
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct Amount {
        #[prost(int64, tag = "1")]
        pub value: i64,
        #[prost(string, tag = "2")]
        pub currency: ::prost::alloc::string::String,
        #[prost(uint64, tag = "3")]
        pub count: u64,
    }
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct TranslationInfo {
        #[prost(string, tag = "1")]
        pub language: ::prost::alloc::string::String,
        #[prost(string, tag = "2")]
        pub translation: ::prost::alloc::string::String,
    }
}
