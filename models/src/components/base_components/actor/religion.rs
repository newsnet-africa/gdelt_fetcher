use crate::components::base_components::raw_types::RawCAMEOReligionCode;

pub enum Religion {
    Unspecified,
    AfricanDiasporicReligion,
    Alewi,
    Agnostic,
    BahaiFaith,
    Buddhism,
    Christianity,
    Confucianism,
    Coptic,
    Catholic,
    Orthodox,
    Druze,
    Hinduism,
    Hasidic,
    IndigenousTribalReligion,
    Jainism,
    Judaism,
    JehovahsWitness,
    LatterDaySaints,
    Muslim,
    Maronite,
    NewReligiousMovement,
    Pagan,
    Protestant,
    Sufi,
    Shia,
    OldShintoSchool,
    Sikh,
    Sunni,
    Taoist,
    UltraOrthodox,
    Zoroastrianism,
}

impl From<RawCAMEOReligionCode> for Religion {
    fn from(value: RawCAMEOReligionCode) -> Self {
        let str_value = std::str::from_utf8(&value.0).expect("Invalid CAMEO Code format");
        match str_value {
            "ADR" => Self::AfricanDiasporicReligion,
            "ALE" => Self::Alewi,
            "ATH" => Self::Agnostic,
            "BAH" => Self::BahaiFaith,
            "BUD" => Self::Buddhism,
            "CHR" => Self::Christianity,
            "CON" => Self::Confucianism,
            "CPT" => Self::Coptic,
            "CTH" => Self::Catholic,
            "DOX" => Self::Orthodox,
            "DRZ" => Self::Druze,
            "HIN" => Self::Hinduism,
            "HSD" => Self::Hasidic,
            "ITR" => Self::IndigenousTribalReligion,
            "JAN" => Self::Jainism,
            "JEW" => Self::Judaism,
            "JHW" => Self::JehovahsWitness,
            "LDS" => Self::LatterDaySaints,
            "MOS" => Self::Muslim,
            "MRN" => Self::Maronite,
            "NRM" => Self::NewReligiousMovement,
            "PAG" => Self::Pagan,
            "PRO" => Self::Protestant,
            "SFI" => Self::Sufi,
            "SHI" => Self::Shia,
            "SHN" => Self::OldShintoSchool,
            "SIK" => Self::Sikh,
            "SUN" => Self::Sunni,
            "TAO" => Self::Taoist,
            "UDX" => Self::UltraOrthodox,
            "ZRO" => Self::Zoroastrianism,
            _ => Self::Unspecified,
        }
    }
}
