use crate::components::codes::actor::ActorTypeCode;

pub enum ActorType {
    Unspecified,
    Policeforces,
    Government,
    Insurgents,
    Judiciary,
    Military,
    PoliticalOpposition,
    Rebels,
    SeparatistRebels,
    StateIntelligence,
    UnalignedArmedForces,
    Agriculture,
    Business,
    Criminal,
    Civilian,
    Development,
    Education,
    Elites,
    Environmental,
    Health,
    HumanRights,
    Labor,
    Legislature,
    Media,
    Refugees,
    Moderate,
    Radical,
    AmnestyInternational,
    RedCross,
    Greenpeace,
    UnitedNations,
    Peacekeepers,
    UnidentifiedStateActor,
    InterGovernmentalOrganization,
    InternationalMilitarizedGroup,
    InternationalTransnationalGeneric,
    MultinationalCorporation,
    NonGovernmentalMovement,
    NonGovernmentalOrganization,
    Settler,
}

impl From<ActorTypeCode> for ActorType {
    fn from(value: ActorTypeCode) -> Self {
        let str_value = std::str::from_utf8(&value.0).expect("Invalid FIPS Code format");
        match str_value {
            "COP" => Self::Policeforces,
            "GOV" => Self::Government,
            "INS" => Self::Insurgents,
            "JUD" => Self::Judiciary,
            "MIL" => Self::Military,
            "OPP" => Self::PoliticalOpposition,
            "REB" => Self::Rebels,
            "SEP" => Self::SeparatistRebels,
            "SPY" => Self::StateIntelligence,
            "UAF" => Self::UnalignedArmedForces,
            "AGR" => Self::Agriculture,
            "BUS" => Self::Business,
            "CRM" => Self::Criminal,
            "CVL" => Self::Civilian,
            "DEV" => Self::Development,
            "EDU" => Self::Education,
            "ELI" => Self::Elites,
            "ENV" => Self::Environmental,
            "HLH" => Self::Health,
            "HRI" => Self::HumanRights,
            "LAB" => Self::Labor,
            "LEG" => Self::Legislature,
            "MED" => Self::Media,
            "REF" => Self::Refugees,
            "MOD" => Self::Moderate,
            "RAD" => Self::Radical,
            "AMN" => Self::AmnestyInternational,
            "IRC" => Self::RedCross,
            "GRP" => Self::Greenpeace,
            "UNO" => Self::UnitedNations,
            "PKO" => Self::Peacekeepers,
            "IGO" => Self::InterGovernmentalOrganization,
            "IMG" => Self::InternationalMilitarizedGroup,
            "INT" => Self::InternationalTransnationalGeneric,
            "MNC" => Self::MultinationalCorporation,
            "NGM" => Self::NonGovernmentalMovement,
            "NGO" => Self::NonGovernmentalOrganization,
            "UIS" => Self::UnidentifiedStateActor,
            "SET" => Self::Settler,
            _ => Self::Unspecified,
        }
    }
}
